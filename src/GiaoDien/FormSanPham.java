/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GiaoDien;

import com.sales.DAO.BrandDAO;
import com.sales.DAO.CategoriesDAO;
import com.sales.DAO.ColorDAO;
import com.sales.DAO.ProductDAO;
import com.sales.DAO.Product_VariantDAO;
import com.sales.DAO.SizeDAO;
import com.sales.DAO.StatisticDAO;
import com.sales.Entity.Brand;
import com.sales.Entity.Categories;
import com.sales.Entity.Color;
import com.sales.Entity.Product;
import com.sales.Entity.Product_Variant;
import com.sales.Entity.Size;
import com.sales.Utils.XImage;
import com.sales.Utils.XValidate;
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.text.DecimalFormat;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author NganTTK_PC09494
 */
public class FormSanPham extends javax.swing.JFrame {

    /**
     * Creates new form FormSanPham
     */
    ColorDAO colorDao = new ColorDAO();
    Color color = new Color();
    SizeDAO sizeDao = new SizeDAO();
    Size size = new Size();
    BrandDAO brandDao = new BrandDAO();
    Brand brand = new Brand();
    CategoriesDAO categoriesDao = new CategoriesDAO();
    Categories categories = new Categories();
    Product_VariantDAO productVariantDao = new Product_VariantDAO();
    Product_Variant productVariant = new Product_Variant();
    ProductDAO productDAO = new ProductDAO();
    Product product = new Product();
    int index = 0;
    DefaultTableModel model = new DefaultTableModel();
    List<Product_Variant> list = productVariantDao.selectAll();
    List<Size> listSize = sizeDao.selectAll();
    List<Color> listColor = colorDao.selectAll();
    List<Categories> listCategories = categoriesDao.selectAll();
    List<Brand> listBrand = brandDao.selectAll();
    List<Product> listProduct = productDAO.selectAll();

    public FormSanPham() {
        initComponents();
        Init();
    }

    public void Init() {
        setLocationRelativeTo(null);
        setIconImage(XImage.XImage());
        setTableTitle();
        fillComboBoxMauSac();
        fillComboKichThuoc();
        fillComboLoai();
        fillComboThuongHieu();
        load();
        refresh();
        setTitle("PHẦN MỀM QUẢN LÝ GIÀY THỂ THAO");
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        btnXoa.setEnabled(false);
        btnSua.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cboThuongHieu = new javax.swing.JComboBox<>();
        cboLoaiSanPham = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMoTa = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        lblHinhAnh = new javax.swing.JLabel();
        txtTenSanPham = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        spinnerSoLuong = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        txtGia = new javax.swing.JTextField();
        txtMaCode = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        cboMauSac = new javax.swing.JComboBox<>();
        cboKichThuoc = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        cknHoatDongKichThuoc = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        cknNgungHoatDongKickThuoc = new javax.swing.JCheckBox();
        btnXuatExcel = new javax.swing.JButton();
        pnlChucNang = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnMoi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tblSanPham.setBackground(new java.awt.Color(204, 255, 204));
        tblSanPham.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Tên SP", "Thương hiệu", "Màu sắc", "Size", "Giá", "Số lượng tồn", "Loại "
            }
        ));
        tblSanPham.setGridColor(new java.awt.Color(0, 0, 0));
        tblSanPham.setRowHeight(22);
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSanPham);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("QUẢN LÝ SẢN PHẨM");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Số lượng");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Loại sản phẩm");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Mô tả");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("Thương hiệu");

        cboThuongHieu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cboThuongHieu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cboLoaiSanPham.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cboLoaiSanPham.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtMoTa.setColumns(20);
        txtMoTa.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMoTa.setRows(5);
        jScrollPane2.setViewportView(txtMoTa);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblHinhAnh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/photo-camera.png"))); // NOI18N
        lblHinhAnh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHinhAnhMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHinhAnh, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHinhAnh, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("Tên sản phẩm");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setText("Màu sắc");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setText("Kích thước:");

        spinnerSoLuong.setModel(new javax.swing.SpinnerNumberModel(0, 0, 1000, 1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setText("Giá");

        txtGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGiaActionPerformed(evt);
            }
        });

        txtMaCode.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Mã code"));

        jPanel4.setBackground(new java.awt.Color(0, 153, 153));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("THÔNG TIN");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap())
        );

        cboKichThuoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jPanel5.setBackground(new java.awt.Color(0, 153, 153));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("THÔNG TIN SẢN PHẨM");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(jLabel12)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addContainerGap())
        );

        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        btnTimKiem.setBackground(new java.awt.Color(0, 102, 102));
        btnTimKiem.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnTimKiem.setForeground(new java.awt.Color(255, 255, 255));
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        buttonGroup1.add(cknHoatDongKichThuoc);
        cknHoatDongKichThuoc.setText("Hoạt Động");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel13.setText("Trạng Thái");

        buttonGroup1.add(cknNgungHoatDongKickThuoc);
        cknNgungHoatDongKickThuoc.setText("Ngừng Hoạt Động");

        btnXuatExcel.setBackground(new java.awt.Color(255, 204, 0));
        btnXuatExcel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnXuatExcel.setForeground(new java.awt.Color(0, 102, 102));
        btnXuatExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/clear.png"))); // NOI18N
        btnXuatExcel.setText("Xuất Excel");
        btnXuatExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatExcelActionPerformed(evt);
            }
        });

        pnlChucNang.setBackground(new java.awt.Color(255, 255, 255));
        pnlChucNang.setLayout(new java.awt.GridLayout(1, 0, 5, 0));

        btnThem.setBackground(new java.awt.Color(255, 204, 0));
        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnThem.setForeground(new java.awt.Color(0, 102, 102));
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/add.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        pnlChucNang.add(btnThem);

        btnSua.setBackground(new java.awt.Color(255, 204, 0));
        btnSua.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSua.setForeground(new java.awt.Color(0, 102, 102));
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/edit.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        pnlChucNang.add(btnSua);

        btnXoa.setBackground(new java.awt.Color(255, 204, 0));
        btnXoa.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(0, 102, 102));
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/delete.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        pnlChucNang.add(btnXoa);

        btnMoi.setBackground(new java.awt.Color(255, 204, 0));
        btnMoi.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnMoi.setForeground(new java.awt.Color(0, 102, 102));
        btnMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/clear.png"))); // NOI18N
        btnMoi.setText("Mới");
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });
        pnlChucNang.add(btnMoi);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1326, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(btnTimKiem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnXuatExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(158, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(cboLoaiSanPham, javax.swing.GroupLayout.Alignment.LEADING, 0, 265, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtTenSanPham, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(cboMauSac, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cboKichThuoc, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel10)
                    .addComponent(jLabel9)
                    .addComponent(jLabel4))
                .addGap(187, 187, 187)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboThuongHieu, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(spinnerSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(66, 66, 66)
                                .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaCode, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)))
                        .addGap(170, 170, 170))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cknHoatDongKichThuoc)
                        .addGap(61, 61, 61)
                        .addComponent(cknNgungHoatDongKickThuoc)
                        .addContainerGap(750, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlChucNang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(79, 79, 79))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtTenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cboThuongHieu, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel2))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(47, 47, 47)
                                                .addComponent(jLabel9))
                                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(cboMauSac, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(spinnerSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(16, 16, 16)
                                                .addComponent(jLabel5)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel10)
                                                .addGap(18, 18, 18)
                                                .addComponent(cboKichThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtMaCode, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(cboLoaiSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(pnlChucNang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cknHoatDongKichThuoc)
                            .addComponent(cknNgungHoatDongKickThuoc))))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiem)
                    .addComponent(btnXuatExcel))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
  DecimalFormat df = new DecimalFormat("###,###");

    void fillComboBoxMauSac() {
        DefaultComboBoxModel modelColor = (DefaultComboBoxModel) cboMauSac.getModel();
        modelColor.removeAllElements();
        try {

            System.out.println(listColor);
            for (Color cd : listColor) {
                if (cd.getActive()) {
                    modelColor.addElement(cd.getName());
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    void fillComboKichThuoc() {
        DefaultComboBoxModel modelKichThuoc = (DefaultComboBoxModel) cboKichThuoc.getModel();
        modelKichThuoc.removeAllElements();
        try {

            System.out.println(listSize);
            for (Size cd : listSize) {
                if (cd.getActive()) {
                    modelKichThuoc.addElement(cd.getName());
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    void fillComboLoai() {
        DefaultComboBoxModel modelLoai = (DefaultComboBoxModel) cboLoaiSanPham.getModel();
        modelLoai.removeAllElements();
        try {

            System.out.println(listCategories);
            for (Categories cd : listCategories) {
                if (cd.getActive()) {
                    modelLoai.addElement(cd.getName());
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    void fillComboThuongHieu() {
        DefaultComboBoxModel modelThuongHieu = (DefaultComboBoxModel) cboThuongHieu.getModel();
        modelThuongHieu.removeAllElements();
        try {

            System.out.println(listBrand);
            for (Brand cd : listBrand) {
                if (cd.getActive()) {
                    modelThuongHieu.addElement(cd.getName());
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    public void setTableTitle() {
        model.addColumn("Mã Sản Phẩm");
        model.addColumn("Tên Sản Phẩm");
        model.addColumn("Màu Sắc");
        model.addColumn("Kích Thước");
        model.addColumn("Loại Sản Phẩm");
        model.addColumn("Thương Hiệu");
        model.addColumn("Số Lượng");
        model.addColumn("Giá");
        model.addColumn("Mô Tả");
        model.addColumn("Trạng Thái");
        model.addColumn("Mã Code");
        model.addColumn("Hình Ảnh");
        tblSanPham.setModel(model);
    }

    public void load() {
        List<Product_Variant> list = productVariantDao.selectAll();

        for (Product_Variant productVariant : list) {

            Object row[] = {productVariant.getId(),
                ProductName(productVariant.getProductId()),
                ColorName(productVariant.getColorId()),
                SizeName(productVariant.getSizeId()),
                CategoriesName(productVariant.getProductId()),
                BrandName(productVariant.getProductId()),
                productVariant.getQuantity(),
                df.format(productVariant.getPrice()),
                ProductMoTa(productVariant.getProductId()),
                productVariant.getActive() ? cknHoatDongKichThuoc.getText() : cknNgungHoatDongKickThuoc.getText(),
                productVariant.getCode(),
                productVariant.getImage()

            };
            model.addRow(row);

        }

        tblSanPham.setModel(model);

    }

    public int ProductID() {
        String tenSanPham = txtTenSanPham.getText();
        List<Product> listProduct = productDAO.selectAll();
        for (Product pr : listProduct) {
            if (tenSanPham.equals(pr.getName())) {
                return pr.getId();
            }
        }
        return -1;
    }

    public String ProductName(int id) {
        List<Product> listProduct = productDAO.selectAll();
        for (Product pr : listProduct) {
            if (id == pr.getId()) {
                return pr.getName();
            }
        }
        return "";
    }

    public String ProductMoTa(int ProductId) {
        List<Product> listProduct = productDAO.selectAll();
        for (Product pr : listProduct) {
            if (ProductId == pr.getId()) {
                return pr.getDescription();
            }
        }
        return "";
    }

    public int SizeID() {
        String tenKichThuoc = cboKichThuoc.getSelectedItem().toString();
        for (Size size : listSize) {
            if (tenKichThuoc.equals(size.getName())) {
                return size.getId();
            }
        }
        return -1;
    }

    public String SizeName(int id) {
        for (Size size : listSize) {
            if (id == size.getId()) {
                return size.getName();
            }
        }
        return "";
    }

    public int ColorID() {
        String tenMauSac = cboMauSac.getSelectedItem().toString();
        for (Color color : listColor) {
            if (tenMauSac.equals(color.getName())) {
                return color.getId();
            }
        }
        return -1;
    }

    public String ColorName(int id) {
        for (Color color : listColor) {
            if (id == color.getId()) {
                return color.getName();
            }
        }
        return "";
    }

    public int BrandID() {
        String tenNhanHang = cboThuongHieu.getSelectedItem().toString();
        for (Brand brand : listBrand) {
            if (tenNhanHang.equals(brand.getName())) {
                return brand.getId();
            }
        }
        return -1;
    }

    public String CategoriesName(int ProductId /*11*/) {
        List<Product> listProduct = productDAO.selectAll();
        int cateID = -1;
        for (Product product : listProduct) {
            if (ProductId == product.getId()) {
                cateID = product.getCategoryId();
                break;
            }
        }
        List<Categories> listCategories = categoriesDao.selectAll();

        for (Categories categories : listCategories) {
            if (cateID == categories.getId()) {
                return categories.getName();
            }
        }
        return "";
    }

    public String BrandName(int ProductId) {
        List<Product> listProduct = productDAO.selectAll();
        int brandID = -1;
        for (Product product : listProduct) {
            if (ProductId == product.getId()) {
                brandID = product.getBrandId();
                break;
            }
        }
        List<Brand> listBrand = brandDao.selectAll();
        for (Brand brand : listBrand) {
            if (brandID == brand.getId()) {
                return brand.getName();
            }
        }
        return "";
    }

    public int CatagoriesID() {
        String tenLoaiSanPham = cboLoaiSanPham.getSelectedItem().toString();
        for (Categories categories : listCategories) {
            if (tenLoaiSanPham.equals(categories.getName())) {
                return categories.getId();
            }
        }
        return -1;
    }

    public void setFrom() {
        Product_Variant pv = new Product_Variant();
        txtTenSanPham.setText((String) tblSanPham.getValueAt(index, 1));
        cboMauSac.setSelectedItem((String) tblSanPham.getValueAt(index, 2));
        cboKichThuoc.setSelectedItem((String) tblSanPham.getValueAt(index, 3));
        cboLoaiSanPham.setSelectedItem((String) tblSanPham.getValueAt(index, 4));
        cboThuongHieu.setSelectedItem((String) tblSanPham.getValueAt(index, 5));
        spinnerSoLuong.setValue(tblSanPham.getValueAt(index, 6));
        txtGia.setText((String) tblSanPham.getValueAt(index, 7).toString().replaceAll(",", ""));
        txtMoTa.setText((String) tblSanPham.getValueAt(index, 8).toString());

        boolean kt = tblSanPham.getValueAt(index, 9).toString() == cknHoatDongKichThuoc.getText() ? true : false;
        if (kt == true) {
            cknHoatDongKichThuoc.setSelected(true);
        } else {
            cknNgungHoatDongKickThuoc.setSelected(true);
        }
        txtMaCode.setText((String) tblSanPham.getValueAt(index, 10).toString());
        String hinhAnh = (String) tblSanPham.getValueAt(index, 11);

        if (hinhAnh != null) {
            lblHinhAnh.setToolTipText(hinhAnh);
            ImageIcon img = (XImage.read(hinhAnh, lblHinhAnh.getWidth(), lblHinhAnh.getHeight()));
            lblHinhAnh.setIcon(img);
        } else {
            lblHinhAnh.setIcon(null);
        }

    }

    public Product_Variant getFromPV() {

        Product_Variant prova = new Product_Variant();
        prova.setColorId(ColorID());
        prova.setSizeId(SizeID());
        prova.setProductId(ProductID());
        prova.setPrice(Integer.parseInt(txtGia.getText().replaceAll(",", "")));
        prova.setQuantity((Integer) spinnerSoLuong.getValue());
        prova.setImage(lblHinhAnh.getToolTipText());
        prova.setCode(txtMaCode.getText());
        if (cknHoatDongKichThuoc.isSelected()) {
            prova.setActive(true);
        } else {
            prova.setActive(false);
        }
        return prova;
    }

    public Product getFromPD() {
        Product pd = new Product();
        pd.setCategoryId(CatagoriesID());
        pd.setBrandId(BrandID());
        pd.setName(txtTenSanPham.getText());
        pd.setDescription(txtMoTa.getText());
        pd.setImage("");
        pd.setActive(true);

        return pd;
    }

    public boolean insertPr() {
        try {
            Product pr = getFromPD();
            productDAO.insert(pr);

            return true;
        } catch (Exception e) {
            return false;
        }
    }

    public void insert() {
        if (insertPr() == true) {
            Product_Variant pv = getFromPV();
            productVariantDao.insert(pv);
            JOptionPane.showMessageDialog(this, "Thêm Sản Phẩm Thành Công");
            load();
        } else {
            JOptionPane.showMessageDialog(this, "loi");
        }
    }

    public void update() {
        Product pr = getFromPD();
        productDAO.update(pr, indexPR(index));

        Product_Variant pv = getFromPV();
        int indexPv = (Integer) tblSanPham.getValueAt(index, 0);
        productVariantDao.update(pv, indexPv);
        JOptionPane.showMessageDialog(this, "Cập Nhật Sản Phẩm Thành Công");
        model.setRowCount(0);
        load();
    }

    public void delete() {

        Product_Variant pv = getFromPV();
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn Xóa Không", "Xác Nhân", JOptionPane.YES_NO_OPTION);
        if (confirm == 0) {
            try {
                int indexPv = (Integer) tblSanPham.getValueAt(index, 0);
                productVariantDao.delete(indexPv);
                model.setRowCount(0);
                load();
                refresh();
                JOptionPane.showMessageDialog(this, "Xóa Thành Công");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Xóa Thất bại");
            }
        }
    }


    private void txtGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGiaActionPerformed

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        // TODO add your handling code here:
        index = tblSanPham.getSelectedRow();
        setFrom();
        btnXoa.setEnabled(true);
        btnSua.setEnabled(true);
    }//GEN-LAST:event_tblSanPhamMouseClicked

    public int indexPR(int row) {
        int indexPv = (Integer) tblSanPham.getValueAt(row, 0);
        List<Product_Variant> list = productVariantDao.selectAll();
        for (Product_Variant pv : list) {
            if (indexPv == pv.getId()) {
                return pv.getProductId();
            }
        }
        return -1;
    }

    public void search() {
        DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
        StatisticDAO thongKe = new StatisticDAO();
        model.setRowCount(0);
        List<Object[]> list = thongKe.timKiemSanPham(txtTimKiem.getText());
        for (Object[] dong : list) {
            Object row[] = {dong[0], dong[1], dong[2], dong[3], dong[4], dong[5],
                dong[6], df.format(dong[7]), dong[8], dong[9].toString().equalsIgnoreCase("true") ? cknHoatDongKichThuoc.getText() : cknNgungHoatDongKickThuoc.getText(), dong[10], dong[11]

            };
            model.addRow(row);
        }

    }
    JFileChooser fileChooser = new JFileChooser();

    public void ChonAnh() {
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            XImage.save(file);
            ImageIcon img = XImage.read(file.getName(), lblHinhAnh.getWidth(), lblHinhAnh.getHeight());
            lblHinhAnh.setIcon(img);
            lblHinhAnh.setToolTipText(file.getName());
        }
    }

    public void refresh() {
        txtTenSanPham.setText("");
        txtGia.setText("");
        txtMoTa.setText("");
        txtMaCode.setText("");
        spinnerSoLuong.setValue(0);
        txtTimKiem.setText("");
        cboKichThuoc.setSelectedIndex(0);
        cboLoaiSanPham.setSelectedIndex(0);
        cboMauSac.setSelectedIndex(0);
        cboThuongHieu.setSelectedIndex(0);
        cknHoatDongKichThuoc.setSelected(true);
        lblHinhAnh.setIcon(null);
        btnXoa.setEnabled(false);
        btnSua.setEnabled(false);

    }

    XValidate validate = new XValidate();
    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        if (validate.checkTenSanPham(txtTenSanPham)
                && validate.checkGia(txtGia)) {
            insert();
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:

        if (validate.checkUpdateTenSanPham(txtTenSanPham)
                && validate.checkGia(txtGia)) {
            update();
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        search();
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        // TODO add your handling code here:
        if (txtTimKiem.getText().isEmpty()) {
            model.setRowCount(0);
            load();
        }
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void lblHinhAnhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHinhAnhMouseClicked
        // TODO add your handling code here:
        ChonAnh();
    }//GEN-LAST:event_lblHinhAnhMouseClicked

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_btnMoiActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnXuatExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatExcelActionPerformed
        // TODO add your handling code here:
        try {

            XSSFWorkbook workbook = new XSSFWorkbook();
            XSSFSheet worksheet = workbook.createSheet("Chuyên đề");
            XSSFRow row = null;
            XSSFCell cell = null;
            row = worksheet.createRow(0); //Tạo hàng thứ 1
            row.setHeight((short) 500); //Cài đặt chiều cao

            Font font = workbook.createFont();
            font.setFontHeightInPoints((short) 15); // Kích thước font
            font.setFontName("Ccode39");             // Tên font

            CellStyle style = workbook.createCellStyle();
            style.setFont(font);

            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("Danh sách sản phẩm");

            row = worksheet.createRow(1);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("STT");

            cell = row.createCell(1, CellType.STRING);
            cell.setCellValue("Tên Sản Phẩm");

            cell = row.createCell(2, CellType.STRING);
            cell.setCellValue("Màu Sắc");

            cell = row.createCell(3, CellType.STRING);
            cell.setCellValue("Kích Thước");

            cell = row.createCell(4, CellType.STRING);
            cell.setCellValue("Loại Sản Phẩm");

            cell = row.createCell(5, CellType.STRING);
            cell.setCellValue("Thương Hiệu");

            cell = row.createCell(6, CellType.STRING);
            cell.setCellValue("Số Lượng");

            cell = row.createCell(7, CellType.STRING);
            cell.setCellValue("Giá");

            cell = row.createCell(8, CellType.STRING);
            cell.setCellValue("Trạng Thái");

            cell = row.createCell(9, CellType.STRING);
            cell.setCellValue("Mã Code");
            List<Product_Variant> list = productVariantDao.selectAll();
            int i = 2; // Khởi tạo giá trị i
            for (int j = 0; j < list.size(); j++) {
                Product_Variant cd = list.get(j);
                row = worksheet.createRow(i); // Tạo hàng thứ  nhất
                //Tạo STT
                cell = row.createCell(0, CellType.NUMERIC);

                cell.setCellValue(i - 1);
                //Tạo mã chuyên đề
                cell = row.createCell(1, CellType.STRING);
                cell.setCellValue(tblSanPham.getValueAt(j, 1).toString());
                //Tạo tên chuyên đề
                cell = row.createCell(2, CellType.NUMERIC);
                cell.setCellValue(tblSanPham.getValueAt(j, 2).toString());

                cell = row.createCell(3, CellType.STRING);
                cell.setCellValue(tblSanPham.getValueAt(j, 3).toString());

                cell = row.createCell(4, CellType.STRING);
                cell.setCellValue(tblSanPham.getValueAt(j, 4).toString());

                cell = row.createCell(5, CellType.STRING);
                cell.setCellValue(tblSanPham.getValueAt(j, 5).toString());

                cell = row.createCell(6, CellType.STRING);
                cell.setCellValue(Integer.parseInt(tblSanPham.getValueAt(j, 6).toString().replaceAll(",", "")));

                cell = row.createCell(7, CellType.NUMERIC);
                cell.setCellValue(Integer.parseInt(tblSanPham.getValueAt(j, 7).toString().replaceAll(",", "")));

                cell = row.createCell(8, CellType.STRING);
                cell.setCellValue(tblSanPham.getValueAt(j, 9).toString());

                cell = row.createCell(9, CellType.STRING);
                cell.setCellStyle(style);
                cell.setCellValue("*" + tblSanPham.getValueAt(j, 10).toString() + "*");

                i++;
            }
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setDialogTitle("Chọn nơi lưu file Excel");
            fileChooser.setSelectedFile(new File("")); // Tên mặc định cho file

            int userSelection = fileChooser.showSaveDialog(this);

            if (userSelection == JFileChooser.APPROVE_OPTION) {
                File fileToSave = fileChooser.getSelectedFile();

                // Đảm bảo tên file có phần mở rộng .xlsx
                if (!fileToSave.getAbsolutePath().endsWith(".xlsx")) {
                    fileToSave = new File(fileToSave + ".xlsx");
                }

                // Ghi dữ liệu vào file đã chọn
                try {
                    FileOutputStream fos = new FileOutputStream(fileToSave);
                    workbook.write(fos);
                    fos.close();

                    // Hiển thị thông báo và hỏi người dùng có muốn mở file hay không
                    if (JOptionPane.showConfirmDialog(this, "Bạn muốn mở Excel không?", "Xuất Excel thành công", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                        if (Desktop.isDesktopSupported()) {
                            Desktop desktop = Desktop.getDesktop();
                            if (fileToSave.exists()) {
                                desktop.open(fileToSave);
                            }
                        }
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Có lỗi khi lưu file: " + e.getMessage());
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnXuatExcelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormSanPham().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXuatExcel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cboKichThuoc;
    private javax.swing.JComboBox<String> cboLoaiSanPham;
    private javax.swing.JComboBox<String> cboMauSac;
    private javax.swing.JComboBox<String> cboThuongHieu;
    private javax.swing.JCheckBox cknHoatDongKichThuoc;
    private javax.swing.JCheckBox cknNgungHoatDongKickThuoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblHinhAnh;
    private javax.swing.JPanel pnlChucNang;
    private javax.swing.JSpinner spinnerSoLuong;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtMaCode;
    private javax.swing.JTextArea txtMoTa;
    private javax.swing.JTextField txtTenSanPham;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
